"""fix users

Revision ID: 2d02e9cf8a91
Revises: afe4d0f96e2a
Create Date: 2025-08-13 13:36:57.754695

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d02e9cf8a91'
down_revision: Union[str, Sequence[str], None] = 'afe4d0f96e2a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_index(op.f('ix_user_fullname'), table_name='user')
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.drop_index(op.f('ix_user_phone_number'), table_name='user')
    op.drop_table('user')
    op.drop_index(op.f('ix_refresh_token_expires_at'), table_name='refresh_token')
    op.drop_index(op.f('ix_refresh_token_jti'), table_name='refresh_token')
    op.drop_index(op.f('ix_refresh_token_user_id'), table_name='refresh_token')
    op.drop_index(op.f('ix_refresh_valid'), table_name='refresh_token')
    op.drop_table('refresh_token')
    op.drop_constraint(op.f('order_user_id_fkey'), 'order', type_='foreignkey')
    op.create_foreign_key(None, 'order', 'users', ['user_id'], ['id'])
    op.drop_constraint(op.f('rating_user_id_fkey'), 'rating', type_='foreignkey')
    op.create_foreign_key(None, 'rating', 'users', ['user_id'], ['id'])
    op.drop_constraint(op.f('washstation_user_id_fkey'), 'washstation', type_='foreignkey')
    op.create_foreign_key(None, 'washstation', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'washstation', type_='foreignkey')
    op.create_foreign_key(op.f('washstation_user_id_fkey'), 'washstation', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'rating', type_='foreignkey')
    op.create_foreign_key(op.f('rating_user_id_fkey'), 'rating', 'user', ['user_id'], ['id'])
    op.drop_constraint(None, 'order', type_='foreignkey')
    op.create_foreign_key(op.f('order_user_id_fkey'), 'order', 'user', ['user_id'], ['id'])
    op.create_table('refresh_token',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('jti', sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    sa.Column('revoked', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('refresh_token_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('refresh_token_pkey'))
    )
    op.create_index(op.f('ix_refresh_valid'), 'refresh_token', ['user_id', 'expires_at', 'revoked'], unique=False)
    op.create_index(op.f('ix_refresh_token_user_id'), 'refresh_token', ['user_id'], unique=False)
    op.create_index(op.f('ix_refresh_token_jti'), 'refresh_token', ['jti'], unique=True)
    op.create_index(op.f('ix_refresh_token_expires_at'), 'refresh_token', ['expires_at'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('fullname', sa.VARCHAR(length=70), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(length=20), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('role', postgresql.ENUM('user', 'admin', 'superadmin', name='userrole'), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey'))
    )
    op.create_index(op.f('ix_user_phone_number'), 'user', ['phone_number'], unique=True)
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.create_index(op.f('ix_user_fullname'), 'user', ['fullname'], unique=False)
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    # ### end Alembic commands ###
